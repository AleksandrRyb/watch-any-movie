{"version":3,"sources":["Footer.js","Detail.js","List.js","index.js"],"names":["Footer","react_default","a","createElement","Fragment","className","style","background","paddingLeft","paddingRight","paddingTop","paddingBottom","color","borderRadius","fontSize","width","textAlign","Detail","props","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","fullScreenData","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","_React$useState3","_React$useState4","openfs","setOpenfs","_React$useState5","_React$useState6","openSeries","setOpenSeries","_useState","_useState2","movielink","setmovielink","_useState3","_useState4","serieslink","setserieslink","_useState5","_useState6","poster","setposter","_useState7","_useState8","year","setyear","_useState9","_useState10","genre","setgenre","_useState11","_useState12","plot","setplot","_useState13","_useState14","title","settitle","_useState15","_useState16","imdbrate","setimdbrate","_useState17","_useState18","metascore","setmetascore","_useState19","_useState20","mtype","setmtype","_useState21","_useState22","season","setseason","axios","get","concat","imval","then","res","data","Poster","Year","Genre","Plot","Title","imdbRating","Metascore","Type","handleClose","funsetdetailbool","handleCloseFs","handleCloseSeries","Dialog","onClose","aria-labelledby","aria-describedby","src","alt","IconButton","onClick","position","top","left","height","ArrowBack_default","Fab","PlayArrow_default","float","marginTop","Chip","label","fontWeight","marginLeft","id","border","sandbox","value","onChange","event","target","right","padding","selected","List","stext","setstext","result","setresult","detailbool","setdetailbool","setimval","show","Search","map","p","catch","error","alert","useEffect","type","toLowerCase","placeholder","aria-label","Search_default","key","imdbID","i","Card","CardActionArea","variant","PlayCircleFilled_default","src_Detail","src_Footer","ReactDOM","render","src_List","document","getElementById"],"mappings":"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","file":"static/js/main.7c3a9a80.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <div className=\"navbar fixed-bottom  justify-content-center\">\r\n        <span\r\n          style={{\r\n            background: \"#1f1e1e\",\r\n            paddingLeft: \"25px\",\r\n            paddingRight: \"25px\",\r\n            paddingTop: \"12px\",\r\n            paddingBottom: \"12px\",\r\n            color: \"gray\",\r\n            borderRadius: \"5px\",\r\n            fontSize: \"15px\",\r\n            width: \"250px\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          Developed by <span style={{ color: \"red\" }}>Amol Dalwai</span>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Fab from \"@material-ui/core/Fab\";\r\n// import DialogActions from \"@material-ui/core/DialogActions\";\r\n// import ReactPlayer from \"react-player\";\r\n// import Button from '@material-ui/core/Button';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\n// import DialogContent from \"@material-ui/core/DialogContent\";\r\n// import DialogContentText from \"@material-ui/core/DialogContentText\";\r\n// import DialogTitle from \"@material-ui/core/DialogTitle\";\r\n// import Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// import { NavLink } from \"react-router-dom\";\r\n// import Iframe from \"react-iframe\";\r\n// import Fullscreen from \"./Fullscreen\";\r\n// import Fullbtn from \"./Fullbtn\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\n// import PluginManager from \"123-movies/src/PluginManager\";\r\n// import Chip from \"@material-ui/core/Chip\";\r\n// import Popup from \"reactjs-popup\";\r\n// import \"reactjs-popup/dist/index.css\";\r\n// import ReactPlayer from \"react-player\";\r\n// import { Player } from \"video-react\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\nconst Detail = (props) => {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xl\"));\r\n  const fullScreenData = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n  const [open, setOpen] = React.useState(true);\r\n  const [openfs, setOpenfs] = React.useState(false);\r\n  const [openSeries, setOpenSeries] = React.useState(false);\r\n  \r\n\r\n  const [movielink, setmovielink] = useState();\r\n  const [serieslink, setserieslink] = useState();\r\n  \r\n  const [poster, setposter] = useState(\"https://i.pinimg.com/originals/ff/20/1b/ff201b10f8fb094d3ac640f8687ed511.gif\");\r\n  const [year, setyear] = useState(\"Loading...\");\r\n  const [genre, setgenre] = useState(\"Loading...\");\r\n  const [plot, setplot] = useState(\"Loading...\");\r\n  const [title, settitle] = useState(\"Loading...\");\r\n  const [imdbrate, setimdbrate] = useState(\"...\");\r\n  const [metascore, setmetascore] = useState(\"...\");\r\n  const [mtype,setmtype]=useState();\r\n  const [season,setseason]=useState(\"01\");\r\n  \r\n  axios\r\n    .get(`https://www.omdbapi.com/?apikey=4eb65943&i=${props.imval}`)\r\n    .then((res) => {\r\n      setposter(res.data.Poster);\r\n      setyear(\"(\" + res.data.Year + \")\");\r\n      setgenre(res.data.Genre);\r\n      setplot(res.data.Plot);\r\n      settitle(res.data.Title);\r\n      setimdbrate(\"Imdb: \" + res.data.imdbRating);\r\n      setmetascore(\"Metascore: \" + res.data.Metascore);\r\n      setmtype(res.data.Type);\r\n\r\n     \r\n\r\n       \r\n\r\n      \r\n      setmovielink(\r\n      \r\n        `javascript:window.location.replace(\"https://database.gdriveplayer.io/player.php?imdb=${props.imval}\")`\r\n      \r\n      );\r\n      setserieslink(\r\n      \r\n        `javascript:window.location.replace(\"https://gomo.to/show/${props.imval}/01-01\")`\r\n      \r\n      );\r\n      \r\n    });\r\n    \r\n  \r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.funsetdetailbool();\r\n  };\r\n  const handleClickOpenFs = () => {\r\n    setOpenfs(true);\r\n  };\r\n\r\n  const handleCloseFs = () => {\r\n    setOpenfs(false);\r\n  };\r\n  const handleClickOpenSeries = () => {\r\n    setOpenSeries(true);\r\n  };\r\n\r\n  const handleCloseSeries = () => {\r\n    setOpenSeries(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        // maxWidth=\"xl\"\r\n        fullScreen={fullScreenData}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        \r\n         \r\n      >\r\n       \r\n       <div className=\"movieDataDiv \" >\r\n       <img src={poster} className=\"moviePosterDiv\"  alt =\"movie-poster\"/>\r\n       <IconButton\r\n          onClick={handleClose}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"5px\",\r\n            left: \"5px\",\r\n            color: \"white\",\r\n            width: \"60px\",\r\n            height: \"60px\",\r\n            background: \"rgb(0,0,0,0.3)\",\r\n            borderRadius: \"100%\",\r\n            \r\n          }}\r\n        >\r\n          <ArrowBackIcon fontSize=\"large\" />\r\n        </IconButton>\r\n\r\n       <Fab color=\"primary\" style={{\r\n              background: \"#b71c1c\"}} fontSize=\"large\" onClick={()=>{  (mtype ===\"series\") ? handleClickOpenSeries() : handleClickOpenFs()}} className=\"playBtn\">\r\n        <PlayArrowIcon />\r\n      </Fab>\r\n      \r\n         <div className=\"movieContent\">\r\n      <h4>{title}</h4>\r\n      <hr style={{background:\"white\"}}/>\r\n   \r\n      <span style={{float:\"right\"}}>{year}</span>\r\n      <span style={{float:\"left\"}}>{genre}</span>\r\n       {/* <span>Type:{mtype}</span> */}\r\n      \r\n      <i style={{color:\"gray\",float:\"left\",marginTop:\"10px\"}}>{plot}</i>\r\n      \r\n      \r\n      \r\n      <Chip\r\n        label={imdbrate}\r\n       \r\n        style={{\r\n          background: \"#ffea00\",color:\"black\",borderRadius:\"5px\",marginTop:\"10px\",fontWeight:\"bolder\"}}\r\n      />\r\n       <Chip\r\n        label={metascore}\r\n        color=\"primary\"\r\n        style={{\r\n          marginTop:\"10px\", borderRadius:\"5px\",marginLeft:\"10px\",fontWeight:\"bolder\"}}\r\n      />\r\n      <br/>\r\n         \r\n      \r\n      </div>\r\n        </div>\r\n\r\n      \r\n        \r\n       \r\n           \r\n\r\n\r\n         {/* btn to full screen  */}\r\n\r\n         <div>\r\n      \r\n\r\n     \r\n\r\n\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={openfs}\r\n        onClose={handleCloseFs}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n       \r\n            <iframe\r\n          src={movielink}\r\n          title=\"movieServer\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          id=\"myId\"\r\n          style={{ border: \"none\" }}\r\n          sandbox=\"allow-same-origin allow-scripts  allow-forms\"\r\n        />\r\n          <select \r\n          value={movielink}\r\n            onChange={ (event)=>{setmovielink(event.target.value+`${props.imval}`);}}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"5px\",\r\n              right: \"12vw\",\r\n              color: \"white\",\r\n              width: \"90px\",\r\n              height: \"50px\",\r\n              background: \"rgb(0,0,0,0.5)\",\r\n              padding:\"5px\",\r\n              borderRadius:\"5px\"\r\n            \r\n              \r\n            }}\r\n          >\r\n            <option value=\"https://database.gdriveplayer.io/player.php?imdb=\">server 1</option>\r\n            <option value=\"https://gomo.to/movie/\">server 2</option>\r\n            <option value=\"https://123moviesplayer.com/movie/\">server 3</option>\r\n            <option value=\"https://database.gdriveplayer.io/player.php?imdb=\">server 4</option>\r\n            </select>\r\n      \r\n          <IconButton\r\n          onClick={handleCloseFs}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"5px\",\r\n            left: \"5px\",\r\n            color: \"white\",\r\n            width: \"60px\",\r\n            height: \"60px\",\r\n            background: \"rgb(0,0,0,0.5)\",\r\n            borderRadius: \"100%\",\r\n            \r\n          }}>\r\n\r\n           <ArrowBackIcon fontSize=\"large\" />\r\n        \r\n          </IconButton>\r\n\r\n         \r\n       \r\n      </Dialog>\r\n    </div>\r\n\r\n\r\n      </Dialog>\r\n\r\n     {/* series iframe */}\r\n\r\n     <Dialog\r\n        fullScreen={fullScreen}\r\n        open={openSeries}\r\n        onClose={handleCloseSeries}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      > \r\n     \r\n        <iframe\r\n          src={serieslink}\r\n          title=\"movieServer\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          id=\"myId\"\r\n          style={{ border: \"none\" }}\r\n          sandbox=\"allow-same-origin allow-scripts  allow-forms\"\r\n        />\r\n {/* for seasons */}\r\n <select \r\n          value={season}\r\n            onChange={ (event)=>{setseason(event.target.value)}}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"5px\",\r\n              left: \"25vw\",\r\n            \r\n              color: \"white\",\r\n              width: \"90px\",\r\n              height: \"50px\",\r\n              background: \"rgb(0,0,0,0.5)\",\r\n              padding:\"5px\",\r\n              borderRadius:\"5px\"\r\n            \r\n              \r\n            }}\r\n          >\r\n            <option value=\"01\" selected=\"selected\">Season </option>\r\n            <option value=\"01\" >Season 1</option>\r\n            <option value=\"02\" >Season 2</option>\r\n            <option value=\"03\" >Season 3</option>\r\n            <option value=\"04\" >Season 4</option>\r\n            <option value=\"02\" >Season 5</option>\r\n            <option value=\"06\" >Season 6</option>\r\n            <option value=\"07\" >Season 7</option>\r\n            <option value=\"08\" >Season 8</option>\r\n            <option value=\"09\" >Season 9</option>\r\n            <option value=\"10\" >Season 10</option>\r\n            </select>\r\n        {/* for  episode */}\r\n          <select \r\n          value={serieslink}\r\n            onChange={ (event)=>{setserieslink(`https://gomo.to/show/`+`${props.imval}/`+`${season}`+`-`+event.target.value );}}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"5px\",\r\n              right: \"12vw\",\r\n              color: \"white\",\r\n              width: \"90px\",\r\n              height: \"50px\",\r\n              background: \"rgb(0,0,0,0.5)\",\r\n              padding:\"5px\",\r\n              borderRadius:\"5px\"\r\n            \r\n              \r\n            }}\r\n          >\r\n            <option value=\"01\" selected=\"selected\">Episode</option>\r\n            <option value=\"01\" >Ep 1</option>\r\n            <option value=\"02\" >Ep 2</option>\r\n            <option value=\"03\" >Ep 3</option>\r\n            <option value=\"04\" >Ep 4</option>\r\n            <option value=\"02\" >Ep 5</option>\r\n            <option value=\"06\" >Ep 6</option>\r\n            <option value=\"07\" >Ep 7</option>\r\n            <option value=\"08\" >Ep 8</option>\r\n            <option value=\"09\" >Ep 9</option>\r\n            <option value=\"10\" >Ep 10</option>\r\n            </select>\r\n\r\n           \r\n      \r\n          <IconButton\r\n          onClick={handleCloseSeries}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"5px\",\r\n            left: \"5px\",\r\n            color: \"white\",\r\n            width: \"60px\",\r\n            height: \"60px\",\r\n            background: \"rgb(0,0,0,0.5)\",\r\n            borderRadius: \"100%\",\r\n            \r\n          }}>\r\n\r\n           <ArrowBackIcon fontSize=\"large\" />\r\n        \r\n          </IconButton>\r\n \r\n\r\n\r\n          \r\n      </Dialog>\r\n      \r\n    </>\r\n  );\r\n};\r\nexport default Detail;\r\n","import React, { useState ,useEffect} from \"react\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Footer from \"./Footer\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\n// import Button from \"@material-ui/core/Button\";\r\n\r\nimport Detail from \"./Detail\";\r\n\r\nconst List = () => {\r\n  const [stext, setstext] = useState(\"avengers\");\r\n  const [result, setresult] = useState([]);\r\n  // const [marvel, setmarvel] = useState([]);\r\n  const [detailbool, setdetailbool] = useState(false);\r\n  const [imval, setimval] = useState();\r\n\r\n  const showChange = (event) => {\r\n    setstext(event.target.value.toLowerCase());\r\n  };\r\n  const show = () => {\r\n    axios\r\n      .get(`https://www.omdbapi.com/?apikey=4eb65943&s=${stext}`)\r\n      .then((res) => {\r\n        setresult(res.data.Search.map((p) => p));\r\n      })\r\n      .catch((error) => {\r\n        alert(\"No search results found!! check for spelling \");\r\n      });\r\n  };\r\n  function showDetail(i) {\r\n    setdetailbool(true);\r\n    setimval(i);\r\n  }\r\n  //to toggle boolean\r\n  function funsetdetailbool() {\r\n    setdetailbool(false);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    show();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <center>\r\n        <div className=\" navbar-dark bg-dark\">\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            value={stext}\r\n            onChange={showChange}\r\n            placeholder=\"Search movies/series\"\r\n            style={{\r\n              height: \"57px\",\r\n              width: \"250px\",\r\n              borderRadius: \"5px\",\r\n              paddingLeft: \"30px\",\r\n              color: \"white\",\r\n              background: \"#212121\",\r\n              border: \"2px\",\r\n            }}\r\n          />\r\n          <Fab\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            style={{\r\n              background: \"#b71c1c\",\r\n              borderRadius: \"7px\",\r\n            }}\r\n          >\r\n            <SearchIcon onClick={show} />\r\n          </Fab>\r\n          <br />\r\n          <br />\r\n        </div>\r\n        <br />\r\n        {/* <Display result={result}/> */}\r\n        <center>\r\n          <div className=\"resultContainer\">\r\n            {result.map((p) => (\r\n              <div key={p.imdbID} onClick={() => showDetail(p.imdbID)}>\r\n                <Card className=\"movieCard\">\r\n                  <CardActionArea>\r\n                    <img className=\"moviePoster\" src={p.Poster} alt={p.Title} />\r\n\r\n                    <span\r\n                      variant=\"contained\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: \"0px\",\r\n                        right: \"0px\",\r\n                        background: \"rgba(0, 0, 0, 0.5)\",\r\n                        color: \"white\",\r\n                        borderRadius: \"4px\",\r\n                      }}\r\n                    >\r\n                      <b> {p.Year}</b>\r\n                    </span>\r\n                    <div className=\"middle\">\r\n                      <div className=\"text\">\r\n                        <PlayCircleFilledIcon\r\n                          className=\"playHoverIcon\"\r\n                          fontSize=\"large\"\r\n                          style={{ color: \"#aa2e25\", fontSize: \"60px\" }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"overlay\">{p.Title}</div>\r\n                  </CardActionArea>\r\n                </Card>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </center>\r\n\r\n       \r\n\r\n        {detailbool ? (\r\n          <Detail imval={imval} funsetdetailbool={funsetdetailbool} />\r\n        ) : null}\r\n      </center>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\nexport default List;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport List from \"./List\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <List />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}