{"version":3,"sources":["Footer.js","Detail.js","List.js","index.js"],"names":["Footer","react_default","a","createElement","Fragment","className","style","background","paddingLeft","paddingRight","paddingTop","paddingBottom","color","borderRadius","fontSize","width","textAlign","Detail","props","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","_useState","_useState2","movielink","setmovielink","axios","get","concat","imval","then","res","handleClose","funsetdetailbool","Dialog","onClose","aria-labelledby","aria-describedby","src","title","height","id","sandbox","DialogActions","IconButton","onClick","position","top","left","ArrowBack_default","List","stext","setstext","_useState3","_useState4","result","setresult","_useState5","_useState6","detailbool","setdetailbool","_useState7","_useState8","setimval","show","data","Search","map","p","catch","error","alert","useEffect","type","value","onChange","event","target","toLowerCase","placeholder","border","Fab","aria-label","Search_default","key","imdbID","i","Card","CardActionArea","Poster","alt","Title","Button","variant","right","Year","PlayCircleFilled_default","src_Detail","src_Footer","ReactDOM","render","src_List","document","getElementById"],"mappings":"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","file":"static/js/main.6988efab.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <div className=\"navbar fixed-bottom  justify-content-center\">\r\n        <span\r\n          style={{\r\n            background: \"#1f1e1e\",\r\n            paddingLeft: \"25px\",\r\n            paddingRight: \"25px\",\r\n            paddingTop: \"12px\",\r\n            paddingBottom: \"12px\",\r\n            color: \"gray\",\r\n            borderRadius: \"5px\",\r\n            fontSize: \"15px\",\r\n            width: \"250px\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          Developed by <span style={{ color: \"red\" }}>Amol Dalwai</span>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n// import Fab from \"@material-ui/core/Fab\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n// import DialogContent from \"@material-ui/core/DialogContent\";\r\n// import DialogContentText from \"@material-ui/core/DialogContentText\";\r\n// import DialogTitle from \"@material-ui/core/DialogTitle\";\r\n// import Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// import { NavLink } from \"react-router-dom\";\r\n// import Iframe from \"react-iframe\";\r\n// import Fullscreen from \"./Fullscreen\";\r\n// import Fullbtn from \"./Fullbtn\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\n// import PluginManager from \"123-movies/src/PluginManager\";\r\n// import Chip from \"@material-ui/core/Chip\";\r\n// import Popup from \"reactjs-popup\";\r\n// import \"reactjs-popup/dist/index.css\";\r\n// import ReactPlayer from \"react-player\";\r\n// import { Player } from \"video-react\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\nconst Detail = (props) => {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xl\"));\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const [movielink, setmovielink] = useState();\r\n  // const [linktitle, setlinktitle] = useState();\r\n  // const [poster, setposter] = useState();\r\n  // const [year, setyear] = useState();\r\n  // const [genre, setgenre] = useState();\r\n  // const [plot, setplot] = useState();\r\n  // const [title, settitle] = useState(\"\");\r\n  // const [imdbrate, setimdbrate] = useState();\r\n  // const [metascore, setmetascore] = useState();\r\n  // const video = \"\";\r\n  axios\r\n    .get(`https://www.omdbapi.com/?apikey=4eb65943&i=${props.imval}`)\r\n    .then((res) => {\r\n      // setposter(res.data.Poster);\r\n      // setyear(\"(\" + res.data.Year + \")\");\r\n      // setgenre(res.data.Genre);\r\n      // setplot(res.data.Plot);\r\n      // settitle(res.data.Title);\r\n      // setimdbrate(\"Imdb: \" + res.data.imdbRating);\r\n      // setmetascore(\"Metascore: \" + res.data.Metascore);\r\n\r\n      // setlinktitle(title.replace(/ /g, \"-\").toLowerCase());\r\n      setmovielink(\r\n        // `https://moviehungershaven.xyz/tplayer/npls1.php?id=${props.imval}`\r\n        //  ` https://database.gdriveplayer.io/player.php?imdb=${props.imval}`\r\n        `javascript:window.location.replace(\"https://database.gdriveplayer.io/player.php?imdb=${props.imval}\")`\r\n      );\r\n      // video = PluginManager.getVideoURL(movielink);\r\n    });\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.funsetdetailbool();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        // maxWidth=\"xl\"\r\n        fullScreen={fullScreen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        // className=\"moviePosterDialog\"\r\n      >\r\n        {/* <img\r\n          src={poster}\r\n          maxWidth=\"sm\"\r\n          className=\"moviePosterDetail\"\r\n          alt=\"Poster\"\r\n        /> */}\r\n\r\n        {/* <iframe src={movielink} className=\"moviePosterDetail\"></iframe> */}\r\n        {/* <Pla\r\n          playsInline\r\n          poster={poster}\r\n          src={movielink}\r\n          // className=\"moviePosterDetail\"\r\n        /> */}\r\n        <iframe\r\n          src={movielink}\r\n          title={movielink}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          id=\"myId\"\r\n          className=\"myClassname\"\r\n          sandbox=\"allow-same-origin allow-scripts  allow-forms\"\r\n        />\r\n\r\n        <DialogActions>\r\n          {/* <ReactPlayer url={movielink} /> */}\r\n\r\n          {/* <iframe src={movielink}></iframe> */}\r\n\r\n          <IconButton\r\n            onClick={handleClose}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"0px\",\r\n              left: \"0px\",\r\n              color: \"white\",\r\n              width: \"80px\",\r\n              height: \"80px\",\r\n            }}\r\n          >\r\n            <ArrowBackIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\nexport default Detail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Footer from \"./Footer\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Detail from \"./Detail\";\r\n\r\nconst List = () => {\r\n  const [stext, setstext] = useState(\"avengers\");\r\n  const [result, setresult] = useState([]);\r\n  const [detailbool, setdetailbool] = useState(false);\r\n  const [imval, setimval] = useState();\r\n\r\n  const showChange = (event) => {\r\n    setstext(event.target.value.toLowerCase());\r\n  };\r\n  const show = () => {\r\n    axios\r\n      .get(`https://www.omdbapi.com/?apikey=4eb65943&s=${stext}`)\r\n      .then((res) => {\r\n        setresult(res.data.Search.map((p) => p));\r\n      })\r\n      .catch((error) => {\r\n        alert(\"No search results found!! Check for spelling \");\r\n      });\r\n  };\r\n  function showDetail(i) {\r\n    setdetailbool(true);\r\n    setimval(i);\r\n  }\r\n  //to toggle boolean\r\n  function funsetdetailbool() {\r\n    setdetailbool(false);\r\n  }\r\n  useEffect(() => {\r\n    show();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <center>\r\n        <div className=\" navbar-dark bg-dark\">\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            value={stext}\r\n            onChange={showChange}\r\n            placeholder=\"Search movies/series\"\r\n            style={{\r\n              height: \"57px\",\r\n              width: \"250px\",\r\n              borderRadius: \"5px\",\r\n              paddingLeft: \"30px\",\r\n              color: \"white\",\r\n              background: \"#212121\",\r\n              border: \"2px\",\r\n            }}\r\n          />\r\n          <Fab\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            style={{\r\n              background: \"#b71c1c\",\r\n              borderRadius: \"7px\",\r\n            }}\r\n          >\r\n            <SearchIcon onClick={show} />\r\n          </Fab>\r\n          <br />\r\n          <br />\r\n        </div>\r\n        <br />\r\n        {/* <Display result={result}/> */}\r\n        {result.map((p) => (\r\n          <div\r\n            key={p.imdbID}\r\n            onClick={() => showDetail(p.imdbID)}\r\n            className=\"resultContainer\"\r\n          >\r\n            <Card className=\"movieCard\">\r\n              <CardActionArea>\r\n                <img className=\"moviePoster\" src={p.Poster} alt={p.Title} />\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: \"0px\",\r\n                    right: \"0px\",\r\n                    background: \"rgba(0, 0, 0, 0.5)\",\r\n                    color: \"white\",\r\n                    borderRadius: \"4px\",\r\n                  }}\r\n                >\r\n                  <b> {p.Year}</b>\r\n                </Button>\r\n                <div className=\"middle\">\r\n                  <div className=\"text\">\r\n                    <PlayCircleFilledIcon\r\n                      className=\"playHoverIcon\"\r\n                      fontSize=\"large\"\r\n                      style={{ color: \"#aa2e25\", fontSize: \"60px\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"overlay\">{p.Title}</div>\r\n              </CardActionArea>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n\r\n        {detailbool ? (\r\n          <Detail imval={imval} funsetdetailbool={funsetdetailbool} />\r\n        ) : null}\r\n      </center>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\nexport default List;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport List from \"./List\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <List />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}